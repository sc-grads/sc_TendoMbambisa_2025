name: AutoTest Database Automation

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  setup-sql-environment:
    name: Setup SQL Server Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install SQL Server Client
        run: |
          # Update package list
          sudo apt-get update
          
          # Install prerequisites
          sudo apt-get install -y curl gnupg unixodbc-dev
          
          # Add Microsoft GPG key
          curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo tee /usr/share/keyrings/microsoft-archive-keyring.gpg > /dev/null
          
          # Add repository for Ubuntu 24.04
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-archive-keyring.gpg] https://packages.microsoft.com/ubuntu/24.04/prod noble main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
          
          # Install SQL Server tools
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18
          
          # Add sqlcmd to PATH
          echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH

      - name: Create Database
        env:
          PINGGY_HOST: "rnonc-41-145-197-133.a.free.pinggy.link"
          PINGGY_PORT: "45297"
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SQL_USER: ${{ secrets.SQL_USER }}
        run: |
          # Test connection
          echo "Testing database connection..."
          sqlcmd -S "$PINGGY_HOST,$PINGGY_PORT" -U "$SQL_USER" -P "$DB_PASSWORD" -Q "SELECT 1" -N -C -b || {
            echo "Connection failed!"
            exit 1
          }
          
          # Execute setup script
          sqlcmd -S "$PINGGY_HOST,$PINGGY_PORT" -U "$SQL_USER" -P "$DB_PASSWORD" \
            -N -C \
            -i "./DatabaseAdministration/SQLStatements/SetupDatabase.sql" \
            -b -o output.log -V 16 -y 1000
          
          # Check execution result
          if [ $? -eq 0 ]; then
            echo "âœ… Database setup completed successfully!"
            cat output.log
          else
            echo "::error::Database setup failed"
            cat output.log
            exit 1
          fi
