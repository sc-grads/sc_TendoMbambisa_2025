name: AutoTest Database Automation

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  install-sql-client:
    name: Install SQL Server Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install SQL Server Client
        run: |
          # Install prerequisites
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          
          # Clean up any existing Microsoft repository configurations
          sudo rm -f /etc/apt/sources.list.d/mssql-release.list
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo rm -f /usr/share/keyrings/microsoft-prod.gpg
          
          # Add Microsoft GPG key (modern method)
          curl -sSL https://packages.microsoft.com/keys/microsoft.asc > microsoft.asc
          sudo install -D -o root -g root -m 644 microsoft.asc /usr/share/keyrings/microsoft-archive-keyring.gpg
          rm microsoft.asc
          
          # Add repository for Ubuntu 24.04 (Noble)
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-archive-keyring.gpg] https://packages.microsoft.com/ubuntu/24.04/prod noble main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
          
          # Install packages
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18 unixodbc-dev
          
          # Add to PATH
          echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH

  create-database:
    name: Connect and Create Database
    runs-on: ubuntu-latest
    needs: install-sql-client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install sqlcmd in current job
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
          echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH

      - name: Create Database
        env:
          PINGGY_URL: ${{ secrets.PINGGY_URL }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          cat <<EOF > odbc.ini
          [ODBC]
          Encrypt=Yes
          TrustServerCertificate=Yes
          EOF

          export ODBCSYSINI=$(pwd)
          sqlcmd -S "$PINGGY_URL" -U Auto_user -P "$DB_PASSWORD" -Q "CREATE DATABASE AutoTestdb;" || exit 1

  create-user-table:
    name: Create User Table
    runs-on: ubuntu-latest
    needs: create-database
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Install sqlcmd in current job
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
          echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH

      - name: Create Table
        env:
          PINGGY_URL: ${{ secrets.PINGGY_URL }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          sqlcmd -S "$PINGGY_URL" -U Auto_user -P "$DB_PASSWORD" -d AutoTestdb -Q "
          CREATE TABLE [dbo].[user] (
              ID INT IDENTITY(1,1) PRIMARY KEY,
              Name NVARCHAR(50),
              Surname NVARCHAR(50),
              Email NVARCHAR(100) UNIQUE
          );" || exit 1

  create-stored-procedure:
    name: Create Stored Procedure
    runs-on: ubuntu-latest
    needs: create-user-table
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Install sqlcmd in current job
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
          echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH

      - name: Create Procedure
        env:
          PINGGY_URL: ${{ secrets.PINGGY_URL }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          sqlcmd -S "$PINGGY_URL" -U Auto_user -P "$DB_PASSWORD" -d AutoTestdb -Q "
          CREATE PROCEDURE InsertUserData
              @Name NVARCHAR(50),
              @Surname NVARCHAR(50),
              @Email NVARCHAR(100)
          AS
          BEGIN
              INSERT INTO [dbo].[user] (Name, Surname, Email)
              VALUES (@Name, @Surname, @Email);
          END;" || exit 1

  insert-sample-data:
    name: Insert Sample Data
    runs-on: ubuntu-latest
    needs: create-stored-procedure
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install sqlcmd in current job
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
          echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH

      - name: Insert Data
        env:
          PINGGY_URL: ${{ secrets.PINGGY_URL }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          sqlcmd -S "$PINGGY_URL" -U Auto_user -P "$DB_PASSWORD" -d AutoTestdb -Q "
          EXEC InsertUserData 'John', 'Doe', 'john.doe@example.com';" || exit 1
